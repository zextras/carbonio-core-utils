#!/bin/bash

# SPDX-FileCopyrightText: 2022 Synacor, Inc.
# SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>
#
# SPDX-License-Identifier: GPL-2.0-only

source /opt/zextras/bin/zmshutil || exit 1
zmsetvars

if [ "$ldap_is_master" = "false" ]; then
  if [ "$ldap_url" = "$ldap_master_url" ] && [ "$1" != "stop" ]; then
    echo "ldap_url and ldap_master_url cannot be the same on an ldap replica"
    exit 1
  fi
fi

getpid() {
  pid=$(pidof /opt/zextras/common/libexec/slapd)
}

checkrunning() {
  getpid
  if [ "$pid" = "" ]; then
    running=0
  else
    running=1
  fi
}

checkListening() {
  searchtimeout=30 #timelimit for ldapsearch
  if [ "$ldap_common_require_tls" = "0" ]; then
    /opt/zextras/common/bin/ldapsearch -x -l $searchtimeout -b "" -s base -H ldapi:/// >/dev/null 2>&1
  else
    /opt/zextras/common/bin/ldapsearch -ZZ -x -l $searchtimeout -b "" -s base -H ldapi:/// >/dev/null 2>&1
  fi
  rc=$?
  if [ $rc -ne 0 ]; then
    listening=0
  else
    listening=1
  fi
}

start() {
  checkrunning
  if [ $running != 0 ]; then
    echo "slapd already running: pid $pid"
    exit 1
  fi
  # Our ldap url should be the first in the list in localconfig
  bind_url=$ldap_bind_url
  if [ "$bind_url" = "" ]; then
    bind_url=$(echo "${ldap_url}" | awk '{print $1}')
  fi
  for ((i = 0; i <= 30; i++)); do
    checkrunning
    if [ $running = 0 ]; then
      if ((i % 5 == 0)); then
        /opt/zextras/libexec/zmslapd -l LOCAL0 \
          -h "${bind_url} ldapi:///" -F /opt/zextras/data/ldap/config
      fi
    else
      break
    fi
    sleep 1
  done
  if [ "$pid" = "" ]; then
    echo "Failed to start slapd."
  else
    echo "Started slapd: pid $pid"
  fi
  for ((i = 0; i < 30; i++)); do
    checkListening
    if [ $listening = 1 ]; then
      break
    fi
    sleep 1
  done
  if [ "$listening" = 0 ]; then
    echo "Error: Unable to check that slapd is listening to connections"
    exit 1
  fi
}

stop() {
  checkrunning

  if [ $running = 0 ]; then
    echo "slapd not running"
    exit 0
  fi
  echo -n "Killing slapd with pid $pid"
  kill "$pid" 2>/dev/null
  for ((i = 0; i < 1500; i++)); do
    if ! kill -0 "$pid" 2>/dev/null; then
      echo " done."
      exit 0
    fi
    if ((i % 5 == 0)); then
      echo -n "."
    fi
    sleep 1
  done
  if kill "$pid" 2>/dev/null; then
    echo " gave up waiting!"
    exit 1
  fi
  echo " done."
  exit 0
}

status() {
  checkrunning
  if [ $running = 0 ]; then
    exit 1
  else
    echo "slapd running pid: $pid"
    exit 0
  fi
}

case "$1" in
  restart)
    $0 stop
    $0 start
    ;;
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status
    ;;
  *)
    echo "Usage: $0 start|stop|status"
    exit 1
    ;;
esac
