#!/bin/bash

# SPDX-FileCopyrightText: 2022 Synacor, Inc.
# SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>
#
# SPDX-License-Identifier: GPL-2.0-only

source /opt/zextras/bin/zmshutil || exit 1
zmsetvars

if [ "$(whoami)" != zextras ]; then
  echo Error: must be run as zextras user
  exit 1
fi

if [ ! -x /opt/zextras/common/bin/mysqld_safe ]; then
  exit 0
fi

if [ ! -d ${mailboxd_directory} ]; then
  exit 0
fi

if [ ! -d ${zimbra_tmp_directory}/mysql ]; then
  mkdir -p ${zimbra_tmp_directory}/mysql >/dev/null 2>&1
fi

zmassert -d ${zimbra_tmp_directory}
zmassert -r ${mysql_mycnf}
zmassert -d $(dirname ${mysql_pidfile})

# innodb will open the database before binding and writing out the pid
# potentially corrupting the files
# prevent multiple init scripts from running at the same time.
initlockfile=${zimbra_tmp_directory}/mysql/mysql.server.lock
checkInitLock() {
  if [ -f "$initlockfile" ]; then
    initpid=$(cat $initlockfile)
    if [ "$initpid" != "" ]; then
      kill -0 $initpid 2>/dev/null
      if [ $? = 0 ]; then
        echo "$0 already running with pid $initpid"
        exit 1
      fi
    fi
  fi
  echo $$ >$initlockfile
}
trap "quit 1" SIGINT SIGQUIT
trap "quit 1" SIGKILL SIGTERM
quit() {
  RC=$1
  rc=${RC:=0}
  cleanup
  exit $rc
}
cleanup() {
  [ -f $initlockfile ] && rm -f $initlockfile
}

#
# Path to my.cnf
#
if [ -f ${mysql_pidfile} ]; then
  pid=$(cat ${mysql_pidfile})
fi

case "$1" in
  'start')
    checkInitLock
    if [ "$pid" != "" ]; then
      kill -0 $pid 2>/dev/null
      if [ $? = 0 ]; then
        echo "mysqld_safe already running with pid $pid"
        quit 0
      fi
    fi
    # --defaults-file must be first argument
    echo -n "Starting mysqld..."
    /opt/zextras/common/bin/mysqld_safe \
      --defaults-file=${mysql_mycnf} \
      --external-locking \
      --log-error=${mysql_errlogfile} \
      --malloc-lib=/opt/zextras/common/lib/libjemalloc.so \
      --ledir=/opt/zextras/common/sbin </dev/null >/dev/null 2>&1 &
    SQLSTARTED=0
    for ((i = 0; i < 60; i++)); do
      /opt/zextras/bin/mysqladmin -s ping 2>&1 >/dev/null
      if [ $? = 0 ]; then
        SQLSTARTED=1
        break
      fi
      sleep 2
    done
    if [ ${SQLSTARTED} -ne 1 ]; then
      echo "failed."
    else
      echo "done."
    fi
    ;;

  'stop')
    checkInitLock
    if [ "${pid}" = "" ]; then
      echo "mysqld not running: no pid in '${mysql_pidfile}'"
      quit 0
    else
      echo -n "Stopping mysqld..."
      kill $pid >>${mysql_errlogfile} 2>&1
      # wait for mysqld pid file to be removed
      for ((i = 0; i < ${zimbra_mysql_shutdown_timeout}; i++)); do
        sleep 2
        kill -0 $pid 2>/dev/null
        if [ $? != 0 ]; then
          rm -f ${mysql_pidfile}
          break
        fi
        kill $pid >>${mysql_errlogfile} 2>&1
      done
      if [ -s ${mysql_pidfile} ]; then
        echo "failed."
        quit 1
      else
        echo " done."
      fi
    fi
    quit 0
    ;;

  'restart' | 'reload')
    $0 stop
    $0 start
    ;;

  'status')
    kill -0 $pid 2>/dev/null
    mysqlstatus=$?
    if [ $mysqlstatus = 0 ]; then
      echo "mysql is running with pid $pid"
    else
      echo "mysql is not running"
    fi
    quit $mysqlstatus
    ;;

  *)
    echo "Usage: $0 start|stop|restart|reload|status"
    quit 1
    ;;
esac
