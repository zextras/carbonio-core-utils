#!/bin/bash

# SPDX-FileCopyrightText: 2022 Synacor, Inc.
# SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>
#
# SPDX-License-Identifier: GPL-2.0-only

source /opt/zextras/bin/zmshutil || exit 1
zmsetvars

if [ ! -d "${mailboxd_directory}" ]; then
  exit 0
fi

if [ ! -x /opt/zextras/common/bin/mysql ]; then
  exit 0
fi

if [ ! -d "${zimbra_java_home}" ]; then
  exit 0
fi

NC=$(which nc 2>/dev/null)
NC=${NC:-$(which netcat 2>/dev/null)}
#
# Memory for use by JVM.
#
javaXmx=${mailboxd_java_heap_size:=512}
javaXms=${javaXmx}
mailboxd_java_heap_new_size_percent=${mailboxd_java_heap_new_size_percent:=25}

#
# Spnego - the spnego_options_file is written by zmconfigd
#          to avoid a zmprov call here.
#
spnego_options_file=/opt/zextras/conf/spnego_java_options
if [ -e ${spnego_options_file} ]; then
  spnegoJavaOptions=$(cat $spnego_options_file)
fi

#
# Main
#
case "$1" in
  'start')
    if [ "$2" = "" ]; then
      /opt/zextras/bin/zmtlsctl >/dev/null 2>&1
    fi
    /opt/zextras/libexec/zmmailboxdmgr status
    rc=$?
    if [ $rc -eq 0 ]; then
      echo "mailboxd already running."
      exit 0
    fi

    mkdir -p "${mailboxd_directory}/work/service/jsp"

    mailboxd_thread_stack_size=${mailboxd_thread_stack_size:=256k}
    if ! echo "${mailboxd_java_options}" | grep -q 'Xss'; then
      mailboxd_java_options="${mailboxd_java_options} -Xss${mailboxd_thread_stack_size}"
    fi

    networkaddress_cache_ttl=${networkaddress_cache_ttl:=60}
    if ! echo "${mailboxd_java_options}" | grep -q 'sun.net.inetaddr.ttl'; then
      mailboxd_java_options="${mailboxd_java_options} -Dsun.net.inetaddr.ttl=${networkaddress_cache_ttl}"
    fi

    if ! echo "${mailboxd_java_options}" | grep -q "log4j"; then
      mailboxd_java_options="${mailboxd_java_options} -Dlog4j.configurationFile=${zimbra_log4j_properties}"
    fi

    echo -n "Starting mailboxd..."
    # shellcheck disable=SC2086
    /opt/zextras/libexec/zmmailboxdmgr start \
      -Dfile.encoding=UTF-8 ${mailboxd_java_options} ${spnegoJavaOptions} -Xms${javaXms}m \
      "-Xmx${javaXmx}m" </dev/null >/dev/null 2>&1
    rc=$?
    if [ $rc != 0 ]; then
      echo "failed."
      exit $rc
    fi
    rc=1
    MPORT=$(/opt/zextras/bin/zmprov -l gs "${zimbra_server_hostname}" zimbraMailPort | grep zimbraMailPort: | awk '{print $2}')
    ncOpt="-z"
    for ((i = 0; i < 12; i++)); do
      $NC $ncOpt localhost "${MPORT}" >/dev/null 2>&1
      rc=$?
      if [ $rc -eq 0 ]; then
        rc=0
        break
      fi
      sleep 5
    done
    if [ $rc = 0 ]; then
      echo "done."
    else
      echo "failed."
    fi
    exit $rc
    ;;

  'kill' | 'stop')
    echo -n "Stopping mailboxd..."
    /opt/zextras/libexec/zmmailboxdmgr status
    rc=$?
    if [ $rc -ne 0 ]; then
      echo "mailboxd is not running."
      exit 0
    fi
    /opt/zextras/bin/zmthrdump -i -o /opt/zextras/log/stacktrace.$$."$(date +%Y%m%d%H%M%S)" 2>/dev/null
    /opt/zextras/libexec/zmmailboxdmgr stop
    rc=$?
    if [ $rc -eq 0 ]; then
      echo "done."
    else
      echo "failed."
    fi
    exit 0
    ;;

  'restart' | 'reload')
    $0 stop
    $0 start "$2"
    ;;

  'status')
    echo -n "mailboxd is "
    /opt/zextras/libexec/zmmailboxdmgr status
    rc=$?
    if [ $rc -eq 0 ]; then
      echo "running."
      exit 0
    else
      echo "not running."
      exit 1
    fi
    ;;

  'update')
    mk_download_dir
    ;;

  *)
    echo "Usage: $0 start|stop|kill|restart|reload|status|update"
    exit 1
    ;;
esac
