#!/bin/bash

# SPDX-FileCopyrightText: 2022 Synacor, Inc.
# SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>
#
# SPDX-License-Identifier: GPL-2.0-only

if [ "$(whoami)" != zextras ]; then
  echo Error: must be run as zextras user
  exit 1
fi

source /opt/zextras/bin/zmshutil || exit 1
zmsetvars

servicename=memcached
pidfile=${zimbra_log_directory}/${servicename}.pid
pid=""

getpid() {
  if [ -f "${pidfile}" ]; then
    pid=$(cat "${pidfile}")
  fi
}

checkrunning() {
  getpid
  if [ "$pid" = "" ]; then
    running=0
  else
    if ps --no-headers -p "$pid" -o cmd 2>/dev/null | grep memcached >/dev/null 2>&1; then
      running=1
    else
      pid=""
      running=0
    fi
  fi
}

case "$1" in
  start)

    if [ ! -x /opt/zextras/common/bin/memcached ]; then
      echo "Error: memcached not installed"
      exit 1
    fi

    checkrunning
    echo -n "Starting ${servicename}..."
    if [ $running = 1 ]; then
      echo "${servicename} is already running."
      exit 0
    fi

    addr=$(/opt/zextras/bin/zmprov -l gs "${zimbra_server_hostname}" zimbraMemcachedBindAddress | awk '/^zimbraMemcachedBindAddress:/{ print $2 }')
    addr="${addr//$'\n'/,}"
    port=$(/opt/zextras/bin/zmprov -l gs "${zimbra_server_hostname}" zimbraMemcachedBindPort | awk '/^zimbraMemcachedBindPort:/{ print $2 }')
    if [ "$addr" = "" ]; then
      /opt/zextras/common/bin/${servicename} -d -P "${pidfile}" -U 0 -l 127.0.1.1,127.0.0.1 -p "${port:-11211}"
    else
      /opt/zextras/common/bin/${servicename} -d -P "${pidfile}" -U 0 -l "${addr}" -p "${port:-11211}"
    fi
    for ((i = 0; i < 30; i++)); do
      checkrunning
      if [ $running = 1 ]; then
        break
      fi
      sleep 1
    done
    if [ "$pid" != "" ]; then
      echo "done."
      exit 0
    else
      echo "failed."
      exit 1
    fi
    ;;
  stop)
    checkrunning
    echo -n "Stopping ${servicename}..."
    if [ $running = 0 ]; then
      echo "${servicename} is not running."
      exit 0
    else
      for ((i = 0; i < 30; i++)); do
        kill -0 "$pid" 2>/dev/null
        rc=$?
        if [ $rc != 0 ]; then
          rm -rf "${pidfile}"
          break
        fi
        kill "$pid"
        sleep 1
      done
    fi
    if [ -s "${pidfile}" ]; then
      echo "failed."
      exit 1
    else
      echo "done."
    fi
    exit 0
    ;;
  restart)
    $0 stop
    $0 start
    ;;
  reload)
    checkrunning
    if [ $running = 1 ] && [ "$pid" != "" ]; then
      echo -n "Reloading ${servicename}..."
      kill -HUP "$pid"
      echo "done."
    fi

    ;;
  status)
    echo -n "${servicename} is "
    checkrunning
    if [ $running = 0 ]; then
      echo "not running."
      exit 1
    else
      echo "running."
      exit 0
    fi
    ;;
  *)
    echo "$0 start|stop|restart|reload|status"
    exit 1
    ;;
esac
