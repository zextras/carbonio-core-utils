#!/bin/bash

# SPDX-FileCopyrightText: 2022 Synacor, Inc.
# SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>
#
# SPDX-License-Identifier: GPL-2.0-only

if [ x$(whoami) != xzextras ]; then
        echo Error: must be run as zextras user
        exit 1
fi

if [ ! -x "/opt/zextras/common/sbin/opendkim" ]; then
        exit 0
fi

source /opt/zextras/bin/zmshutil || exit 1
zmsetvars

PID=""
PIDFILE=${zimbra_log_directory}/opendkim.pid
odk=/opt/zextras/common/sbin/opendkim
config=/opt/zextras/conf/opendkim.conf

rewriteconfig() {
        /opt/zextras/libexec/configrewrite opendkim >/dev/null 2>&1
}

getpid() {
        if [ -f $PIDFILE ]; then
                PID=$(cat $PIDFILE)
        fi
}

checkrunning() {
        getpid
        if [ "x$PID" = "x" ]; then
                RUNNING=0
        else
                if ps --no-headers -p $PID -o cmd 2>/dev/null | grep opendkim >/dev/null 2>&1; then
                        RUNNING=1
                else
                        PID=""
                        RUNNING=0
                fi
        fi
}

start() {
        checkrunning
        if [ $RUNNING = 0 ]; then
                if [ x$1 = "x" ]; then
                        rewriteconfig
                fi
                $odk -x $config -u zextras
                if [ $? != 0 ]; then
                        echo "Failed to start opendkim: $?"
                        exit 1
                fi
                sleep 2
                getpid
                echo "Started opendkim: pid $PID"
        else
                echo "zmopendkimctl already running: pid $PID"
                exit 0
        fi
}

stop() {
        checkrunning
        if [ $RUNNING = 0 ]; then
                echo "zmopendkimctl not running"
                exit 0
        else
                echo -n "Stopping opendkim..."
                kill $PID 2>/dev/null
                for ((i = 0; i < 300; i++)); do
                        sleep 5
                        kill -0 $PID 2>/dev/null
                        if [ $? != 0 ]; then
                                echo " done."
                                exit 0
                        fi
                done
                kill $PID 2>/dev/null
                if [ $? = 0 ]; then
                        echo " failed to stop $PID"
                        exit 1
                else
                        echo " done."
                fi
        fi
        exit 0
}

status() {
        checkrunning
        echo -n "zmopendkimctl is "
        if [ $RUNNING = 0 ]; then
                echo "not running."
                exit 1
        else
                echo "running with pid: $PID"
                exit 0
        fi
}

case "$1" in
reload | restart)
        $0 stop
        $0 start $2
        ;;
start)
        start $2
        ;;
stop)
        stop
        ;;
status)
        status
        ;;
*)
        echo "Usage: $0 start|stop|restart|reload|status"
        exit 1
        ;;
esac
