#!/bin/bash

# SPDX-FileCopyrightText: 2022 Synacor, Inc.
# SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>
#
# SPDX-License-Identifier: GPL-2.0-only

if [ "$(whoami)" != zextras ]; then
  echo Error: must be run as zextras user
  exit 1
fi

source /opt/zextras/bin/zmshutil || exit 1
zmsetvars

pid=""
pidfile="/opt/zextras/data/sasl2/state/saslauthd.pid"

rewriteconfig() {
  /opt/zextras/libexec/configrewrite sasl >/dev/null 2>&1
}

getpid() {
  if [ -f ${pidfile} ]; then
    pid=$(cat ${pidfile})
  fi
}

checkrunning() {
  getpid
  if [ "$pid" = "" ]; then
    running=0
  else
    if ps --no-headers -p $pid -o cmd 2>/dev/null | grep saslauthd >/dev/null 2>&1; then
      running=1
    else
      pid=""
      running=0
    fi
  fi
}

#
# Main
#
case "$1" in
  'start')
    checkrunning
    echo -n "Starting saslauthd..."
    if [ $running = 1 ]; then
      echo "already running."
      exit 0
    fi
    mkdir -p /opt/zextras/data/sasl2/state
    if [ $2 = "" ]; then
      rewriteconfig
    fi
    /opt/zextras/common/sbin/saslauthd -r -a zimbra
    for ((i = 0; i < 30; i++)); do
      checkrunning
      if [ $running = 1 ]; then
        echo "done."
        exit 0
      fi
      sleep 1
    done
    echo "failed."
    exit 1
    ;;

  'kill' | 'stop')
    checkrunning
    if [ $running = 0 ]; then
      echo "saslauthd is not running."
      exit 0
    else
      echo -n "Stopping saslauthd..."
      for ((i = 0; i < 30; i++)); do
        kill -0 $pid 2>/dev/null
        if [ $? != 0 ]; then
          rm -rf ${pidfile}
          break
        fi
        kill $pid
        sleep 1
      done
    fi
    if [ -s ${pidfile} ]; then
      exit 1
    else
      echo "done."
    fi
    exit 0
    ;;

  'restart' | 'reload')
    $0 stop
    $0 start $2
    ;;

  'status')
    checkrunning
    if [ $running = 1 ]; then
      echo "saslauthd is running."
      exit 0
    else
      echo "saslauthd is not running."
      exit 1
    fi
    ;;

  *)
    echo "Usage: $0 start|stop|kill|restart|reload|status"
    exit 1
    ;;
esac
